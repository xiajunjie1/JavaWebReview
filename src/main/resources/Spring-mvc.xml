<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context-4.3.xsd
                http://www.springframework.org/schema/mvc
        https://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">
<!-- 配置Controller组件扫描 -->
<context:component-scan base-package="com.maker.view" />
<context:component-scan base-package="com.maker.UserManger.controller"/>
<!-- 配置视图解析器 -->
<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	<!-- 设置前缀 -->
	<property name="prefix" value="/"></property>
	<!-- 设置后缀 -->
	<property name="suffix" value=".jsp"></property>
</bean>

<!-- 配置请求处理适配器，告诉该适配器，用Jackson将返回的对象或者集合转成json字符串
		配置好了该适配器后，只要是Controller中ResponseBody的方法返回对象，则会自动将对象转为字符串回写
 -->
<!--  <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"> -->
<!-- 注入相应的messageConverters -->
<!-- <property name="messageConverters"> -->
<!--  	<list>
		<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
	</list>
</property>
</bean>
-->

<!-- 配置mvc注解取代上述的处理器适配器配置 -->
<mvc:annotation-driven />

<!-- 配置静态资源访问权限，不配置，无法加载css和js文件 
	mapping为访问服务端找资源的地址，location为文件具体的目录位置
-->
<!--  
<mvc:resources location="/js/" mapping="/js/**"/>
<mvc:resources location="/css/" mapping="/css/**"/>
-->
<!--
	用该标签可以替代上面的mvc:resources配置，代表如果SpringMVC匹配不到路径就交由原始的Servlet处理  
<mvc:default-servlet-handler/>
-->
<mvc:default-servlet-handler/>
<!-- 配置文件上传解析器 -->
<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<!-- 上传文件的大小 -->
	<property name="maxUploadSize" value="5242800"></property>
	<!-- 上传单个文件的大小 -->
	<property name="maxUploadSizePerFile" value="5242800"></property>
	<!-- 上传文件的编码类型 -->
	<property name="defaultEncoding" value="UTF-8"></property>
</bean>

<!-- 配置拦截器 -->
<mvc:interceptors>

		
	
		<mvc:interceptor>
			<mvc:mapping path="/user/**"/>
			<!-- 对登录请求放行 -->
			<mvc:exclude-mapping path="/user/login"/>
			<bean class="com.maker.interceptor.LoginInterceptor" ></bean>
	</mvc:interceptor>
	
			<mvc:interceptor>
			<mvc:mapping path="/role/**"/>
			<bean class="com.maker.interceptor.LoginInterceptor" ></bean>
	</mvc:interceptor>
	
			<mvc:interceptor>
			<mvc:mapping path="/pages/**"/>
			<bean class="com.maker.interceptor.LoginInterceptor" ></bean>
	</mvc:interceptor>
</mvc:interceptors>

<!-- 配置简单异常处理器 -->
<bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
	<!-- 默认错误视图 -->
	<property name="defaultErrorView" value="err/error"></property>
	<!-- 配置不同的异常类型对应的错误视图 -->
	<property name="exceptionMappings">
		<map>
			<entry key="java.lang.NullPointerException" value="err/error1"></entry>
			<entry key="java.lang.NumberFormatException" value="err/error2"></entry>
			<entry key="com.maker.exception.myException" value="err/error3"></entry>
		</map>
	</property>
</bean>

</beans>

